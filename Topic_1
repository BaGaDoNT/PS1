#1. получение справки
Get-Help 
#2. детальная справка и примеры
Get-Help -Full
Get-Help -Examples
#2.1 справка ко нонкретной команде и примеры
Get-Help Get-Process
Get-Help Get-Process -Examples
#4. все командлеты установки функций
Get-Command set* -CommandType Function
#5.	Получить список команд работы с файлами
Get-Command *-item
#6. Получить список команд работы с объектами

#7.	Получите список всех псевдонимов
get-alias
#8. Создайте свой псевдоним для любого командлета (Get-Process)
set-alias gpr Get-Process
#9.	Просмотреть список методов и свойств объекта типа процесс
Get-Process | Get-Member
#10.	Просмотреть список методов и свойств объекта типа строка
Get-Member -InputObject "string"
#11.	Получить список запущенных процессов, данные об определённом процессе
Get-Process
Get-Process -name Calculator
Get-Process -name Calculator | fl *
#12.	Получить список всех сервисов, данные об определённом сервисе
Get-Service
Get-Service -DisplayName *центр*
Get-Service wscsvc
Get-Service wscsvc | fl * #полный список параметров
#13.	Получить список обновлений системы
get-hotfix
#14.	Узнайте, какой язык установлен для UI Windows
Get-WinUserLanguageList
#15.	Получите текущее время и дату
Get-Date
#16.	Сгенерируйте случайное число (любым способом)
get-random
#17.	Выведите дату и время, когда был запущен процесс «explorer». Получите какой это день недели. 
(Get-Process explorer).starttime
((Get-Process explorer).starttime).DayOfWeek
#18.	Откройте любой документ в MS Word (не важно как) и закройте его с помощью PowerShell
Start-Process "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Excel 2016.lnk"
Stop-Process -name excel
#19.	Подсчитать значение выражения S= . N – изменяемый параметр. Каждый шаг выводить в виде строки. (Пример: На шаге 2 сумма S равна 9)
$s = 0;
for ($i = 1; $i -ne (5+1);$i++){
    $S = $s + (3*$i)
    Write-Output (" pri i= " + $i + " s= " +  $s)
     }
#20.	Напишите функцию для предыдущего задания. Запустите её на выполнение.
function summa($n, $s=0)
{ 
for ($i = 1; $i -ne (5+1);$i++){
    $S = $s + (3*$i)
    Write-Output (" pri i= " + $i + " s= " +  $s)
}
    
    #return (Write-Output (" pri i= " + $i + " s= " +  $s))
}
summa -n 2
